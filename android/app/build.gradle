apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33
    buildToolsVersion '33.0.2'
    defaultConfig {
        applicationId "org.libpag.pagviewer"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            if (project.hasProperty("arm64-only")) {
                abiFilters.add("arm64-v8a")
            } else {
                abiFilters.add("armeabi-v7a")
                abiFilters.add("arm64-v8a")
                abiFilters.add("x86_64")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', project(':ffavc').file('proguard-rules.pro')
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', project(':ffavc').file('proguard-rules.pro')
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.assets.srcDirs = ['../../assets']
    }

    namespace 'libpag.pagviewer'
}

project.afterEvaluate {
    mergeReleaseNativeLibs.doLast {
        delete {
            delete project.getBuildDir().path + '/intermediates/merged_native_libs/release/out/lib/armeabi'
        }
        copy {
            from project.getBuildDir().path + '/intermediates/merged_native_libs/release/out/lib/armeabi-v7a'
            into project.getBuildDir().path + '/intermediates/merged_native_libs/release/out/lib/armeabi'
            include '*.so'
        }
    }
    stripReleaseDebugSymbols.doLast {
        delete {
            delete project.getBuildDir().path + '/intermediates/stripped_native_libs/release/out/lib/armeabi'
        }
        copy {
            from project.getBuildDir().path + '/intermediates/stripped_native_libs/release/out/lib/armeabi-v7a'
            into project.getBuildDir().path + '/intermediates/stripped_native_libs/release/out/lib/armeabi'
            include '*.so'
        }
    }
    // 此处为了方便debug，保留debug版本armeabi的拷贝，方便源码接入时候的调试
    mergeDebugNativeLibs.doLast {
        delete {
            delete project.getBuildDir().path + '/intermediates/merged_native_libs/debug/out/lib/armeabi'
        }
        copy {
            from project.getBuildDir().path + '/intermediates/merged_native_libs/debug/out/lib/armeabi-v7a'
            into project.getBuildDir().path + '/intermediates/merged_native_libs/debug/out/lib/armeabi'
            include '*.so'
        }
    }
    stripDebugDebugSymbols.doLast {
        delete {
            delete project.getBuildDir().path + '/intermediates/stripped_native_libs/debug/out/lib/armeabi'
        }
        copy {
            from project.getBuildDir().path + '/intermediates/stripped_native_libs/debug/out/lib/armeabi-v7a'
            into project.getBuildDir().path + '/intermediates/stripped_native_libs/debug/out/lib/armeabi'
            include '*.so'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.tencent.tav:libpag:4.3.33-noffavc'
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    debugImplementation project(':ffavc')
    releaseImplementation project(':ffavc')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'com.android.support'
                && !details.requested.name.contains('multidex') ) {
            details.useVersion '27.1.1'
        }
    }
}